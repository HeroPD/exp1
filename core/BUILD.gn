declare_args() {
  extra_cflags = []
  extra_cflags_c = []
  extra_cflags_cc = []
  extra_ldflags = []
}


config("extra_flags") {
  cflags = extra_cflags
  cflags_c = extra_cflags_c
  cflags_cc = extra_cflags_cc
  ldflags = extra_ldflags
}

# executable("test") {
#   sources = [
#     "src/tests/helloworld.cpp"
#   ]
#   cflags_cc = [
#     "-std=c++11"
#   ]
#   libs = [
#   ]
#   deps = [
#   ]
# }

shared_library("core") {

  pybind_headers = exec_script(
    "gn/pybind11_headers.py", [], "trim list lines"
  )
  python_ldflags = exec_script(
    "gn/python_ldflags.py", [], "trim list lines"
  )
  python_ext_suffix = exec_script(
    "gn/python_ext_suffix.py", [], "trim string"
  )

  xcode_sysroot = exec_script(
    "gn/find_xcode_sysroot.py", [ "macosx" ], "trim string"
  )

  sources = [
    "src/tests/core.mm",
    "src/tests/export.cc"
  ]

  cflags = [
  ]

  cflags_cc = [
    "-fPIC",
    "-fvisibility=hidden",
    "-std=gnu++17",
    "-x",
    "objective-c++"
  ]
  cflags_cc += pybind_headers
  ldflags = python_ldflags

  if (xcode_sysroot != "") {
    cflags_cc += [
      "-isysroot",
      xcode_sysroot,
    ]
    ldflags += [
      "-isysroot",
      xcode_sysroot,
    ]
  }

  libs = [
    "python3.8",
    # "skia",
    "jpeg",
    "webp",
    "webpdemux",
    "webpmux",
    "png"
  ]
  frameworks = [
    "Foundation.framework",
    "Cocoa.framework",
    "QuartzCore.framework"
  ]
  output_name = string_join("", ["core", python_ext_suffix])
  output_prefix_override = true
  output_extension = ""

}